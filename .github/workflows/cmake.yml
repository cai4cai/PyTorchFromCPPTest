name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}  

    steps:
    - uses: actions/checkout@v3

    - name: Install optional tools (clang-tidy)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y clang-tidy

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory.
      # `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} .

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test - Disabled for Windows
      if: matrix.os != 'windows-latest'
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Simple exe run (Windows) - Disabled
      if: ${{ false }}
      # if: matrix.os == 'windows-latest'
      working-directory: ${{github.workspace}}/build
      run: ${{github.workspace}}\build\${{env.BUILD_TYPE}}\pytorchfromcpptest.exe

    - name: Simple exe run (Not Windows)
      if: matrix.os != 'windows-latest'
      working-directory: ${{github.workspace}}/build
      run: ./pytorchfromcpptest
      shell: bash

